// Code generated by mockery v2.50.0. DO NOT EDIT.

package embedded

import mock "github.com/stretchr/testify/mock"

// MockRegistration is an autogenerated mock type for the Registration type
type MockRegistration struct {
	mock.Mock
}

type MockRegistration_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRegistration) EXPECT() *MockRegistration_Expecter {
	return &MockRegistration_Expecter{mock: &_m.Mock}
}

// registration provides a mock function with no fields
func (_m *MockRegistration) registration() {
	_m.Called()
}

// MockRegistration_registration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'registration'
type MockRegistration_registration_Call struct {
	*mock.Call
}

// registration is a helper method to define mock.On call
func (_e *MockRegistration_Expecter) registration() *MockRegistration_registration_Call {
	return &MockRegistration_registration_Call{Call: _e.mock.On("registration")}
}

func (_c *MockRegistration_registration_Call) Run(run func()) *MockRegistration_registration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRegistration_registration_Call) Return() *MockRegistration_registration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRegistration_registration_Call) RunAndReturn(run func()) *MockRegistration_registration_Call {
	_c.Run(run)
	return _c
}

// NewMockRegistration creates a new instance of MockRegistration. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRegistration(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRegistration {
	mock := &MockRegistration{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
